<Window x:Class="VPackager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VPackager"
        mc:Ignorable="d" 
        Icon="/App.ico"
        Title="Version Packager" Height="500" Width="800"
        Background="{StaticResource WindowBackBrushKey}"
        Loaded="Window_Loaded">
    <Window.Resources>
        <ContextMenu x:Key="MenuSave">
            <MenuItem Command="{x:Static ApplicationCommands.Save}"/>
            <MenuItem Command="{x:Static ApplicationCommands.SaveAs}"/>
        </ContextMenu>
        <ContextMenu x:Key="MenuAdd">
            <MenuItem Command="{x:Static local:Commands.ImportFolder}"/>
            <MenuItem Command="{x:Static local:Commands.CreateFolder}"/>
        </ContextMenu>
        <ContextMenu x:Key="MenuRecents" ItemsSource="{Binding RecentFiles, Source={x:Static local:Settings.Default}}">
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Template" Value="{StaticResource MenuItemTemplate}"/>
                    <Setter Property="Command" Value="{x:Static local:Commands.OpenRecent}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                </Style>
            </ContextMenu.ItemContainerStyle>
        </ContextMenu>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static ApplicationCommands.New}" CanExecute="New_CanExecute" Executed="New_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Open}" CanExecute="Open_CanExecute" Executed="Open_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.Save}" CanExecute="Save_CanExecute" Executed="Save_Executed"/>
        <CommandBinding Command="{x:Static ApplicationCommands.SaveAs}" CanExecute="SaveAs_CanExecute" Executed="SaveAs_Executed"/>

        <CommandBinding Command="{x:Static local:Commands.OpenRecent}" CanExecute="OpenRecent_CanExecute" Executed="OpenRecent_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.ImportFolder}" CanExecute="ImportFolder_CanExecute" Executed="ImportFolder_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.CreateFolder}" CanExecute="CreateFolder_CanExecute" Executed="CreateFolder_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.AddFiles}" CanExecute="AddFiles_CanExecute" Executed="AddFiles_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.Generate}" CanExecute="Generate_CanExecute" Executed="Generate_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.Options}" CanExecute="Options_CanExecute" Executed="Options_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.TurnRelativePath}" CanExecute="TurnRelativePath_CanExecute" Executed="TurnRelativePath_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.TurnAbsolutePath}" CanExecute="TurnAbsolutePath_CanExecute" Executed="TurnAbsolutePath_Executed"/>

        <CommandBinding Command="{x:Static local:Commands.Minimize}" Executed="Minimize_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.Maximize}" Executed="Maximize_Executed"/>
        <CommandBinding Command="{x:Static local:Commands.CloseWindow}" Executed="CloseWindow_Executed"/>
    </Window.CommandBindings>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="6,3,6,6"  UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Grid SnapsToDevicePixels="True"
          Background="{StaticResource WindowBackBrushKey}"
          TextElement.Foreground="{StaticResource WindowForeBrushKey}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <local:DialogTitle Grid.Row="0">
            <local:DialogTitle.Header>
                <TextBlock Style="{StaticResource  HeaderTextBlockStyle}"
                           TextElement.FontWeight="Light"
                           Margin="4"
                           FontWeight="Light"
                           Foreground="{StaticResource WindowTitleBrushKey}"
                           Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource TextLocalConverter}}"/>
            </local:DialogTitle.Header>
            <StackPanel Orientation="Horizontal">
                <Button Name="MinimizeButton" 
                        Grid.Column="0"
                        Style="{StaticResource WindowButtonStyle}"
                        VerticalAlignment="Top"
                        Command="{x:Static local:Commands.Minimize}"
                        ToolTip="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Minimize'}">&#x30;</Button>
                <Button Name="MaximizeButton"
                        Grid.Column="1"
                        Style="{StaticResource WindowButtonStyle}"
                        VerticalAlignment="Top"
                        Command="{x:Static local:Commands.Maximize}"
                        ToolTip="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Maximize'}">&#x31;</Button>
                <Button Name="CloseButton"
                        Grid.Column="2" 
                        Style="{StaticResource WindowButtonStyle}"
                        VerticalAlignment="Top"
                        Command="{x:Static local:Commands.CloseWindow}"
                        ToolTip="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Close'}">&#x72;</Button>
            </StackPanel>
        </local:DialogTitle>
        
        <ToolBar Grid.Row="1" 
                 ToolBarTray.IsLocked="True"
                 Padding="4,0" 
                 Background="{StaticResource ToolbarBackBrushKey}"
                 Foreground="{StaticResource ToolbarForeBrushKey}"
                 TextElement.FontWeight="Light"
                 BorderBrush="{StaticResource ToolbarBorderBrushKey}"
                 BorderThickness="0,0,0,1"
                 TextBlock.FontSize="{StaticResource BodyTextSize}">
            <ToolBar.Resources>
                <Style TargetType="local:SplitButton" BasedOn="{StaticResource {x:Type local:SplitButton}}">
                    <Setter Property="BorderBrush" Value="#424242"/>
                </Style>
            </ToolBar.Resources>

            <local:SplitButton IconText="&#xE160;" IconBrush="#0277BD" Command="ApplicationCommands.New" 
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='New'}"/>
            <local:SplitButton IconText="&#xE188;" IconBrush="#F9A825" Command="ApplicationCommands.Open" DropDownMenu="{StaticResource MenuRecents}"
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Open'}"/>
            <local:SplitButton IconText="&#xE105;" IconBrush="#283593" Command="ApplicationCommands.Save" DropDownMenu="{StaticResource MenuSave}"
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Save'}"/>
            <Separator Opacity="0.5"/>
            <local:SplitButton IconText="&#xE109;" IconBrush="#2E7D32" Command="local:Commands.AddFiles" DropDownMenu="{StaticResource MenuAdd}" 
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Add'}"/>
            <local:SplitButton IconText="&#xE115;" IconBrush="#4527A0" Command="local:Commands.Options" 
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Options'}"/>
            <Separator Opacity="0.5"/>
            <local:SplitButton IconText="&#xE14D;" IconBrush="#00838F" Command="local:Commands.Generate" 
                               Content="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Publish'}"/>
        </ToolBar>
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="100"/>
                <ColumnDefinition Width="*" MinWidth="150"/>
            </Grid.ColumnDefinitions>

            <TreeView Grid.Column="0"
                      Name="TreeViewFolders"
                      BorderThickness="0"
                      BorderBrush="{StaticResource SideBoxBorderBrushKey}"
                      Background="{StaticResource SideBoxBackBrushKey}"
                      HorizontalContentAlignment="Stretch"
                      ItemsSource="{Binding Path=Packages, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"
                      SelectedItemChanged="TreeView_SelectedItemChanged">
                <TreeView.CommandBindings>
                    <CommandBinding Command="ApplicationCommands.Delete" CanExecute="DeleteFolder_CanExecute" Executed="DeleteFolder_Executed"/>
                    <CommandBinding Command="local:Commands.Property" CanExecute="FolderProperty_CanExecute" Executed="FolderProperty_Executed"/>
                </TreeView.CommandBindings>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type local:PackageFolder}" ItemsSource="{Binding Folders}">
                        <Border CornerRadius="3">
                            <StackPanel Orientation="Horizontal" Margin="1">
                                <TextBlock FontFamily="Segoe UI Symbol" VerticalAlignment="Center" Margin="2">&#xE1C1;</TextBlock>
                                <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" Padding="4" FontSize="{StaticResource BodyTextSize}"/>
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource TreeSelectionBackColorKey}" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{StaticResource TreeSelectionForeColorKey}" />                    
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="Foreground" Value="{StaticResource SideBoxForeBrushKey}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Create New Folder'}"
                                  Command="local:Commands.CreateFolder"/>
                        <MenuItem Header="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Delete'}"
                                  Command="ApplicationCommands.Delete"/>
                        <Separator/>
                        <MenuItem Header="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Property'}"
                                  Command="local:Commands.Property"/>
                    </ContextMenu>
                </TreeView.ContextMenu>
            </TreeView>
            
            <GridSplitter Grid.Column="0"
                          Width="12" 
                          Background="Transparent"
                          BorderBrush="{StaticResource SideBoxBorderBrushKey}"
                          BorderThickness="0,0,1,0"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Right"/>
            
            <DataGrid Grid.Column="1"
                      Name="GridItems"
                      IsReadOnly="True"
                      AutoGenerateColumns="False"
                      BorderThickness="0"
                      Background="{StaticResource GridBackBrushKey}"
                      TextElement.Foreground="{StaticResource GridForeBrushKey}"
                      RowBackground="Transparent"
                      FontSize="{StaticResource BodyTextSize}" 
                      RowHeaderWidth="0" 
                      HorizontalGridLinesBrush="{StaticResource GridLineBrushKey}"
                      VerticalGridLinesBrush="{StaticResource GridLineBrushKey}"
                      ColumnHeaderStyle="{StaticResource GridViewColumnHeaderStyle}"
                      ItemsSource="{Binding Path=CurrentFolder.Items, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"
                      SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=Window}}">
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseDoubleClick" Handler="ItemRow_MouseDoubleClick"/>
                    </Style>
                    <TextBlock x:Key="HeaderName" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Name'}"/>
                    <TextBlock x:Key="HeaderLocation" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Location'}"/>
                    <TextBlock x:Key="HeaderTransitName" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Transit Name'}"/>
                    <TextBlock x:Key="HeaderAction" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Action'}"/>
                    <TextBlock x:Key="HeaderCompareMode" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Compare Mode'}"/>
                    <TextBlock x:Key="HeaderVersion" Style="{StaticResource BodyTextBlockStyle}"
                               Text="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Version'}"/>
                </DataGrid.Resources>
                <DataGrid.CommandBindings>
                    <CommandBinding Command="ApplicationCommands.Delete" CanExecute="DeleteItems_CanExecute" Executed="DeleteItems_Executed"/>
                    <CommandBinding Command="local:Commands.Property" CanExecute="GridProperty_CanExecute" Executed="GridProperty_Executed"/>
                </DataGrid.CommandBindings>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Foreground" Value="{StaticResource GridForeBrushKey}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="2,4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter HorizontalAlignment="Left" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource GridSelectionBackBrushKey}"/>
                                <Setter Property="Foreground" Value="{StaticResource GridSelectionForeBrushKey}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{x:Static local:Commands.TurnRelativePath}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/turn.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{x:Static local:Commands.TurnAbsolutePath}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/turn.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Delete'}"
                                  Command="ApplicationCommands.Delete"/>
                        <Separator/>
                        <MenuItem Header="{Binding Converter={StaticResource TextLocalConverter}, ConverterParameter='Property'}"
                                  Command="local:Commands.Property"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="{StaticResource HeaderName}" Width="200" MinWidth="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontFamily="Segoe UI Symbol" VerticalAlignment="Center" Margin="0,0,4,0"
                                               Text="{Binding Converter={StaticResource ItemIconConverter}, Mode=OneWay}"/>
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{StaticResource HeaderLocation}" Width="250" Binding="{Binding Path, Converter={StaticResource PathToDirectoryConverter}}" />
                    <DataGridTextColumn Header="{StaticResource HeaderTransitName}" Width="100" Binding="{Binding TransitName}"/>
                    <DataGridTextColumn Header="{StaticResource HeaderAction}" Width="100" Binding="{Binding Action, Converter={StaticResource TextLocalConverter}}"/>
                    <DataGridTextColumn Header="{StaticResource HeaderCompareMode}" Width="100" Binding="{Binding CompareMode, Converter={StaticResource TextLocalConverter}}"/>
                    <DataGridTextColumn Header="{StaticResource HeaderVersion}" Width="100" Binding="{Binding Version}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
